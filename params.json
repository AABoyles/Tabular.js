{"name":"Tabular.js","tagline":"A small Javascript library for playing with CSVs","body":"Tabular.js\r\n==========\r\n\r\nA small Javascript library for playing with CSVs.\r\n\r\nby Tony Boyles<AABoyles@gmail.com>\r\n\r\nLicensed under the GNU GPL 3 or later\r\n\r\nUSE\r\n---\r\n\r\nTo Use Tabular.js, just source the library however you prefer:\r\n\r\n    <script src=\"tabular.js\"></script>\r\n\r\nAnd then access the power of tabular.js by calling the global object it creates (creatively called \"tabular\"):\r\n\r\n    console.log(tabular);\r\n\r\nTry putting your tab-delimited data in an element you can select using Javascript:\r\n\r\n    var container = document.getElementById(\"csv\");\r\n    var tabbedData = container.innerHTML;\r\n    var tableHTML = tabular.csv2Table(tabbedData);\r\n    container.innerHTML = tableHTML;\r\n\r\nIf you use the jQuery plugin, you can cut that whole block to a single line:\r\n\r\n    $(\"#csv\").csv2Table();\r\n\r\nFull Documentation coming soon, but for now, here's what's implemented:\r\n\r\n    tabular = {\r\n        table2Array: function(table){}, //Given a table element, return a 2-dimensional array\r\n        table2Object: function(table){}, //Given a table element, return an array of objects mapping the first row (presumably titles) to the given row's corresponding value\r\n        table2CSV: function(table){}, //Given a table Element, return a CSV string\r\n        table2CSVURL: function(table){}, //Given a table Element, return a URL-encoded version of the CSV string representation to allow downloading of the data direct from the browser (no server required)\r\n        csv2Table: function(csv, delim, headers){}, //Given a CSV string, a delimiter string, and a boolean indicating the presence of headers in the CSV string, return an HTML table string\r\n        csv2Array: function(csv, delim){}, //Not yet implemented\r\n        csv2Object: function(csv, delim){} //Not yet implemented\r\n    }\r\n\r\nAnd here's what's currently available with the jQuery Plugin:\r\n\r\n    $ = {\r\n        csv2Table: function(delim, headers){}, //Transforms the element upon which it was called into a table\r\n        table2CSV: function(delim){}, //Returns an array of each element selected, tables' contents CSV-encoded\r\n        downloadTable: function(format, send){} // Returns an array of URL-encoded CSV Strings for use in downloadable links.\r\n    }","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}